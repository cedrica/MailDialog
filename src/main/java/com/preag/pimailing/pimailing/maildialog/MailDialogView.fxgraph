package com.preag.pimailing.maildialog

import javafx.scene.layout.VBox
import javafx.scene.layout.BorderPane
import javafx.scene.layout.HBox
import javafx.scene.control.Label
import javafx.scene.control.ComboBox
import javafx.scene.control.Button
import javafx.scene.control.TextField
import org.controlsfx.glyphfont.Glyph
import java.lang.Double
import org.controlsfx.control.ToggleSwitch
import com.preag.core.ui.advancedhtmleditor.AdvancedHtmlEditor
import javafx.geometry.Insets
import com.preag.pimailing.maildialog.MailDialogController
import javafx.scene.text.Font
import com.preag.pimailing.maildialog.MailDialogView
import com.preag.pimailing.maildialog.advancedtextfield.AdvancedTextFieldView
import org.controlsfx.control.HiddenSidesPane
import com.preag.pimailing.maildialog.previews.MailPreView
import javafx.scene.control.ToggleButton
import javafx.scene.control.Tooltip
import javafx.scene.control.ScrollPane
import javafx.scene.layout.GridPane
import javafx.scene.layout.ColumnConstraints

dynamic component MailDialogView controlledby MailDialogController styledwith [
	"/com/preag/pimailing/maildialog/MailDialogView.css" ] {
	MailDialogView id rootNode {
		stylesheets : [
			"/com/preag/pimailing/maildialog/MailDialogView.css"
		],
		styleClass : [
			"mail-dialog-view"
		],
		top : HBox {
			alignment : "CENTER_RIGHT",
			Button id btnShowPreview {
				graphic : Glyph {
					icon : "BARS",
					fontFamily : "FontAwesome"
				},
				tooltip : Tooltip {
					text : "Show preview"
				},
				onAction : controllermethod onShowPreview
			}
		},
		center : BorderPane {
			maxWidth : const Double#MAX_VALUE,

			top : HBox {
				alignment : "CENTER_LEFT",
				Button {
					prefHeight : 100,
					prefWidth : 100,
					contentDisplay : "TOP",
					graphic : Glyph {
						icon : "PAPER_PLANE",
						fontFamily : "FontAwesome",
						fontSize : 40
					},
					text : "Senden"
				},
				spacing : 30,
				GridPane {
					static hgrow : "ALWAYS",
					preview gridLinesVisible : true,
					vgap : 5,
					hgap : 5,
					columnConstraints : [
						ColumnConstraints {
							hgrow : "NEVER",
							minWidth : 100
						},
						ColumnConstraints {
							hgrow : "ALWAYS"
						},
						ColumnConstraints {
							hgrow : "NEVER"
						}
					],
					Label {
						static columnIndex : 0,
						static rowIndex : 0,
						text : "Von:"
					},
					ComboBox id cboTransmitter {
						static columnIndex : 1,
						static rowIndex : 0,
						static hgrow : "ALWAYS",
						maxWidth : const Double#MAX_VALUE,
						promptText : "E-Mail auswählen"
					},
					Button {
						static columnIndex : 0,
						static rowIndex : 1,
						maxWidth : const Double#MAX_VALUE,
						text : "An...",
						onAction : controllermethod onShowRecieverDialog
					},
					AdvancedTextFieldView id atfvRecievers {
						static columnIndex : 1,
						static rowIndex : 1,
						maxWidth : const Double#MAX_VALUE,
						disable : true
					},
					Label {
						static columnIndex : 0,
						static rowIndex : 2,
						text : "Betreff:"
					},
					TextField id tfSubject {
						static columnIndex : 1,
						static rowIndex : 2,
						maxWidth : const Double#MAX_VALUE
					},
					Label {
						static columnIndex : 0,
						static rowIndex : 3,
						text : "Anhänge:"
					},
					AdvancedTextFieldView id atfvAttachments {
						static columnIndex : 1,
						static rowIndex : 3,
						static hgrow : "ALWAYS"
					},
					HBox {
						static columnIndex : 2,
						static rowIndex : 3,
						spacing : 5,
						Button {
							graphic : Glyph {
								icon : "PAPERCLIP",
								fontFamily : "FontAwesome"
							},
							onAction : controllermethod onShowUploadAttachments
						},
						Button {
							graphic : Glyph {
								icon : "TRASH",
								fontFamily : "FontAwesome"
							},
							onAction : controllermethod onShowAttachmentManager
						}
					},
					HBox {
						static columnIndex : 1,
						static rowIndex : 4,
						spacing : 10,
						alignment : "CENTER_LEFT",
						Label {
							text : "Persönliche Anrede"
						},
						VBox {
							alignment : "CENTER",
							ToggleSwitch id tsPersonalAddress {
							}
						},
						Label {
							maxWidth : const Double#MAX_VALUE,
							static hgrow : "ALWAYS"
						},
						ComboBox id cboSelectedTemplate {
							promptText : "Vorlage auswählen"
						}
					}
				}
			},
			center : VBox {
				padding : Insets {
					top : 20
				},
				AdvancedHtmlEditor id aheMessageBody {
					static vgrow : "ALWAYS"
				}
			},
			bottom : HBox {
				padding : Insets {
					top : 20
				},
				ComboBox id cboSignature {
					promptText : "Signature auswählen"
				},
				Label {
					maxWidth : const Double#MAX_VALUE,
					static hgrow : "ALWAYS"
				},
				Button id btnSaveTemplate {
					graphic : Glyph {
						icon : "SAVE",
						fontFamily : "FontAwesome"
					},
					text : "als Vorlage speichern",
					onAction : controllermethod onSaveAsTemplate

				}
			}
		}
	}
}